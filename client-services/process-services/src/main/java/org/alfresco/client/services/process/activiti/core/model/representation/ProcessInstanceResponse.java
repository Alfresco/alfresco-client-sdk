/**
 * Activiti REST API
 * # activiti     - Activiti is battle-tested Business Process Management. Organizations across the world depend on the open source platform in a huge range of demanding situations. It supports open standards with BPMN and DMN so you can create processes that suit you.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.alfresco.client.services.process.activiti.core.model.representation;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import com.google.gson.annotations.SerializedName;

/**
 * ProcessInstanceResponse
 */
public class ProcessInstanceResponse
{
    @SerializedName("id")
    private String id = null;

    @SerializedName("url")
    private String url = null;

    @SerializedName("businessKey")
    private String businessKey = null;

    @SerializedName("suspended")
    private Boolean suspended = false;

    @SerializedName("ended")
    private Boolean ended = false;

    @SerializedName("processDefinitionId")
    private String processDefinitionId = null;

    @SerializedName("processDefinitionUrl")
    private String processDefinitionUrl = null;

    @SerializedName("processDefinitionKey")
    private String processDefinitionKey = null;

    @SerializedName("activityId")
    private String activityId = null;

    @SerializedName("variables")
    private List<RestVariable> variables = new ArrayList<RestVariable>();

    @SerializedName("tenantId")
    private String tenantId = null;

    @SerializedName("name")
    private String name = null;

    @SerializedName("completed")
    private Boolean completed = false;

    /**
     * Get id
     * 
     * @return id
     **/
    public String getId()
    {
        return id;
    }

    public void setId(String id)
    {
        this.id = id;
    }

    /**
     * Get url
     * 
     * @return url
     **/
    public String getUrl()
    {
        return url;
    }

    public void setUrl(String url)
    {
        this.url = url;
    }

    /**
     * Get businessKey
     * 
     * @return businessKey
     **/
    public String getBusinessKey()
    {
        return businessKey;
    }

    public void setBusinessKey(String businessKey)
    {
        this.businessKey = businessKey;
    }

    /**
     * Get suspended
     * 
     * @return suspended
     **/
    public Boolean getSuspended()
    {
        return suspended;
    }

    public void setSuspended(Boolean suspended)
    {
        this.suspended = suspended;
    }

    /**
     * Get ended
     * 
     * @return ended
     **/
    public Boolean getEnded()
    {
        return ended;
    }

    public void setEnded(Boolean ended)
    {
        this.ended = ended;
    }

    /**
     * Get processDefinitionId
     * 
     * @return processDefinitionId
     **/
    public String getProcessDefinitionId()
    {
        return processDefinitionId;
    }

    public void setProcessDefinitionId(String processDefinitionId)
    {
        this.processDefinitionId = processDefinitionId;
    }

    /**
     * Get processDefinitionUrl
     * 
     * @return processDefinitionUrl
     **/
    public String getProcessDefinitionUrl()
    {
        return processDefinitionUrl;
    }

    public void setProcessDefinitionUrl(String processDefinitionUrl)
    {
        this.processDefinitionUrl = processDefinitionUrl;
    }

    /**
     * Get processDefinitionKey
     * 
     * @return processDefinitionKey
     **/
    public String getProcessDefinitionKey()
    {
        return processDefinitionKey;
    }

    public void setProcessDefinitionKey(String processDefinitionKey)
    {
        this.processDefinitionKey = processDefinitionKey;
    }

    /**
     * Get activityId
     * 
     * @return activityId
     **/
    public String getActivityId()
    {
        return activityId;
    }

    public void setActivityId(String activityId)
    {
        this.activityId = activityId;
    }

    public ProcessInstanceResponse addVariablesItem(RestVariable variablesItem)
    {
        this.variables.add(variablesItem);
        return this;
    }

    /**
     * Get variables
     * 
     * @return variables
     **/
    public List<RestVariable> getVariables()
    {
        return variables;
    }

    public void setVariables(List<RestVariable> variables)
    {
        this.variables = variables;
    }

    /**
     * Get tenantId
     * 
     * @return tenantId
     **/
    public String getTenantId()
    {
        return tenantId;
    }

    public void setTenantId(String tenantId)
    {
        this.tenantId = tenantId;
    }

    /**
     * Get name
     * 
     * @return name
     **/
    public String getName()
    {
        return name;
    }

    public void setName(String name)
    {
        this.name = name;
    }

    /**
     * Get completed
     * 
     * @return completed
     **/
    public Boolean getCompleted()
    {
        return completed;
    }

    public void setCompleted(Boolean completed)
    {
        this.completed = completed;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o) { return true; }
        if (o == null || getClass() != o.getClass()) { return false; }
        ProcessInstanceResponse processInstanceResponse = (ProcessInstanceResponse) o;
        return Objects.equals(this.id, processInstanceResponse.id)
                && Objects.equals(this.url, processInstanceResponse.url)
                && Objects.equals(this.businessKey, processInstanceResponse.businessKey)
                && Objects.equals(this.suspended, processInstanceResponse.suspended)
                && Objects.equals(this.ended, processInstanceResponse.ended)
                && Objects.equals(this.processDefinitionId, processInstanceResponse.processDefinitionId)
                && Objects.equals(this.processDefinitionUrl, processInstanceResponse.processDefinitionUrl)
                && Objects.equals(this.processDefinitionKey, processInstanceResponse.processDefinitionKey)
                && Objects.equals(this.activityId, processInstanceResponse.activityId)
                && Objects.equals(this.variables, processInstanceResponse.variables)
                && Objects.equals(this.tenantId, processInstanceResponse.tenantId)
                && Objects.equals(this.name, processInstanceResponse.name)
                && Objects.equals(this.completed, processInstanceResponse.completed);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(id, url, businessKey, suspended, ended, processDefinitionId, processDefinitionUrl,
                processDefinitionKey, activityId, variables, tenantId, name, completed);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class ProcessInstanceResponse {\n");

        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    url: ").append(toIndentedString(url)).append("\n");
        sb.append("    businessKey: ").append(toIndentedString(businessKey)).append("\n");
        sb.append("    suspended: ").append(toIndentedString(suspended)).append("\n");
        sb.append("    ended: ").append(toIndentedString(ended)).append("\n");
        sb.append("    processDefinitionId: ").append(toIndentedString(processDefinitionId)).append("\n");
        sb.append("    processDefinitionUrl: ").append(toIndentedString(processDefinitionUrl)).append("\n");
        sb.append("    processDefinitionKey: ").append(toIndentedString(processDefinitionKey)).append("\n");
        sb.append("    activityId: ").append(toIndentedString(activityId)).append("\n");
        sb.append("    variables: ").append(toIndentedString(variables)).append("\n");
        sb.append("    tenantId: ").append(toIndentedString(tenantId)).append("\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    completed: ").append(toIndentedString(completed)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null) { return "null"; }
        return o.toString().replace("\n", "\n    ");
    }
}
